{
  "CF91907414": {
    "contest_id": 1256,
    "language": "GNU C++17",
    "path": "codeforces\\1256\\D.cpp",
    "platform": "Codeforces",
    "problem_index": "D",
    "problem_name": "Binary String Minimizing",
    "problem_url": "https://codeforces.com/contest/1256/problem/D",
    "submission_id": "CF91907414",
    "submission_url": "https://codeforces.com/contest/1256/submission/91907414",
    "tags": [
      "greedy",
      "*1500"
    ],
    "timestamp": "Sep/05/2020 10:26"
  },
  "CF93345178": {
    "contest_id": 1131,
    "language": "GNU C++17",
    "path": "codeforces\\1131\\B.cpp",
    "platform": "Codeforces",
    "problem_index": "B",
    "problem_name": "Draw!",
    "problem_url": "https://codeforces.com/contest/1131/problem/B",
    "submission_id": "CF93345178",
    "submission_url": "https://codeforces.com/contest/1131/submission/93345178",
    "tags": [
      "greedy",
      "implementation",
      "*1400"
    ],
    "timestamp": "Sep/20/2020 20:16"
  },
  "CF93349482": {
    "contest_id": 1288,
    "language": "GNU C++17",
    "path": "codeforces\\1288\\C.cpp",
    "platform": "Codeforces",
    "problem_index": "C",
    "problem_name": "Two Arrays",
    "problem_url": "https://codeforces.com/contest/1288/problem/C",
    "submission_id": "CF93349482",
    "submission_url": "https://codeforces.com/contest/1288/submission/93349482",
    "tags": [
      "combinatorics",
      "dp",
      "*1600"
    ],
    "timestamp": "Sep/20/2020 21:11"
  },
  "CF93539685": {
    "contest_id": 574,
    "language": "GNU C++17",
    "path": "codeforces\\574\\B.cpp",
    "platform": "Codeforces",
    "problem_index": "B",
    "problem_name": "Bear and Three Musketeers",
    "problem_url": "https://codeforces.com/contest/574/problem/B",
    "submission_id": "CF93539685",
    "submission_url": "https://codeforces.com/contest/574/submission/93539685",
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "hashing",
      "*1500"
    ],
    "timestamp": "Sep/23/2020 13:15"
  },
  "CF93539790": {
    "contest_id": 574,
    "language": "GNU C++17",
    "path": "codeforces\\574\\B.cpp",
    "platform": "Codeforces",
    "problem_index": "B",
    "problem_name": "Bear and Three Musketeers",
    "problem_url": "https://codeforces.com/contest/574/problem/B",
    "submission_id": "CF93539790",
    "submission_url": "https://codeforces.com/contest/574/submission/93539790",
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "hashing",
      "*1500"
    ],
    "timestamp": "Sep/23/2020 13:17"
  },
  "CF94197389": {
    "contest_id": 1426,
    "language": "GNU C++17",
    "path": "codeforces\\1426\\A.cpp",
    "platform": "Codeforces",
    "problem_index": "A",
    "problem_name": "Floor Number",
    "problem_url": "https://codeforces.com/contest/1426/problem/A",
    "submission_id": "CF94197389",
    "submission_url": "https://codeforces.com/contest/1426/submission/94197389",
    "tags": [
      "implementation",
      "math",
      "*800"
    ],
    "timestamp": "Sep/29/2020 15:34"
  },
  "CF94199216": {
    "contest_id": 1426,
    "language": "GNU C++17",
    "path": "codeforces\\1426\\B.cpp",
    "platform": "Codeforces",
    "problem_index": "B",
    "problem_name": "Symmetric Matrix",
    "problem_url": "https://codeforces.com/contest/1426/problem/B",
    "submission_id": "CF94199216",
    "submission_url": "https://codeforces.com/contest/1426/submission/94199216",
    "tags": [
      "implementation",
      "*900"
    ],
    "timestamp": "Sep/29/2020 15:59"
  },
  "CF94202205": {
    "contest_id": 1426,
    "language": "GNU C++17",
    "path": "codeforces\\1426\\C.cpp",
    "platform": "Codeforces",
    "problem_index": "C",
    "problem_name": "Increase and Copy",
    "problem_url": "https://codeforces.com/contest/1426/problem/C",
    "submission_id": "CF94202205",
    "submission_url": "https://codeforces.com/contest/1426/submission/94202205",
    "tags": [
      "binary search",
      "constructive algorithms",
      "math",
      "*1100"
    ],
    "timestamp": "Sep/29/2020 16:41"
  },
  "CF94202698": {
    "contest_id": 1426,
    "language": "GNU C++17",
    "path": "codeforces\\1426\\C.cpp",
    "platform": "Codeforces",
    "problem_index": "C",
    "problem_name": "Increase and Copy",
    "problem_url": "https://codeforces.com/contest/1426/problem/C",
    "submission_id": "CF94202698",
    "submission_url": "https://codeforces.com/contest/1426/submission/94202698",
    "tags": [
      "binary search",
      "constructive algorithms",
      "math",
      "*1100"
    ],
    "timestamp": "Sep/29/2020 16:47"
  },
  "CF94913099": {
    "contest_id": 1426,
    "language": "GNU C++17",
    "path": "codeforces\\1426\\D.cpp",
    "platform": "Codeforces",
    "problem_index": "D",
    "problem_name": "Non-zero Segments",
    "problem_url": "https://codeforces.com/contest/1426/problem/D",
    "submission_id": "CF94913099",
    "submission_url": "https://codeforces.com/contest/1426/submission/94913099",
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "sortings",
      "*1500"
    ],
    "timestamp": "Oct/08/2020 18:17"
  },
  "CF96514461": {
    "contest_id": 1352,
    "language": "GNU C++17",
    "path": "codeforces\\1352\\G.cpp",
    "platform": "Codeforces",
    "problem_index": "G",
    "problem_name": "Special Permutation",
    "problem_url": "https://codeforces.com/contest/1352/problem/G",
    "submission_id": "CF96514461",
    "submission_url": "https://codeforces.com/contest/1352/submission/96514461",
    "tags": [
      "constructive algorithms",
      "*1600"
    ],
    "timestamp": "Oct/24/2020 15:24"
  },
  "CF96515670": {
    "contest_id": 1352,
    "language": "GNU C++17",
    "path": "codeforces\\1352\\G.cpp",
    "platform": "Codeforces",
    "problem_index": "G",
    "problem_name": "Special Permutation",
    "problem_url": "https://codeforces.com/contest/1352/problem/G",
    "submission_id": "CF96515670",
    "submission_url": "https://codeforces.com/contest/1352/submission/96515670",
    "tags": [
      "constructive algorithms",
      "*1600"
    ],
    "timestamp": "Oct/24/2020 15:41"
  },
  "CF98054268": {
    "contest_id": 608,
    "language": "GNU C++17",
    "path": "codeforces\\608\\B.cpp",
    "platform": "Codeforces",
    "problem_index": "B",
    "problem_name": "Hamming Distance Sum",
    "problem_url": "https://codeforces.com/contest/608/problem/B",
    "submission_id": "CF98054268",
    "submission_url": "https://codeforces.com/contest/608/submission/98054268",
    "tags": [
      "combinatorics",
      "strings",
      "*1500"
    ],
    "timestamp": "Nov/10/2020 17:04"
  },
  "CF98358027": {
    "contest_id": 1438,
    "language": "GNU C++17",
    "path": "codeforces\\1438\\A.cpp",
    "platform": "Codeforces",
    "problem_index": "A",
    "problem_name": "Specific Tastes of Andre ",
    "problem_url": "https://codeforces.com/contest/1438/problem/A",
    "submission_id": "CF98358027",
    "submission_url": "https://codeforces.com/contest/1438/submission/98358027",
    "tags": [
      "constructive algorithms",
      "implementation",
      "*800"
    ],
    "timestamp": "Nov/14/2020 12:36"
  },
  "CF98358736": {
    "contest_id": 1438,
    "language": "GNU C++17",
    "path": "codeforces\\1438\\B.cpp",
    "platform": "Codeforces",
    "problem_index": "B",
    "problem_name": "Valerii Against Everyone",
    "problem_url": "https://codeforces.com/contest/1438/problem/B",
    "submission_id": "CF98358736",
    "submission_url": "https://codeforces.com/contest/1438/submission/98358736",
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "sortings",
      "*1000"
    ],
    "timestamp": "Nov/14/2020 12:47"
  },
  "CF98390394": {
    "contest_id": 1438,
    "language": "GNU C++17",
    "path": "codeforces\\1438\\C.cpp",
    "platform": "Codeforces",
    "problem_index": "C",
    "problem_name": "Engineer Artem",
    "problem_url": "https://codeforces.com/contest/1438/problem/C",
    "submission_id": "CF98390394",
    "submission_url": "https://codeforces.com/contest/1438/submission/98390394",
    "tags": [
      "2-sat",
      "chinese remainder theorem",
      "constructive algorithms",
      "fft",
      "flows",
      "*2000"
    ],
    "timestamp": "Nov/14/2020 21:22"
  }
}